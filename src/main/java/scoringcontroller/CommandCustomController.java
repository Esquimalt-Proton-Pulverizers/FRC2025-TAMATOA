// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./wpilibNewCommands/generate_hids.py. DO NOT MODIFY

package scoringcontroller;

import edu.wpi.first.wpilibj.event.EventLoop;
import edu.wpi.first.wpilibj2.command.CommandScheduler;
import edu.wpi.first.wpilibj2.command.button.CommandGenericHID;
import edu.wpi.first.wpilibj2.command.button.Trigger;

/**
 * A version of {@link CustomController} with {@link Trigger} factories for command-based.
 * 
 * File based on "CommandXboxController" class provided in the WPILib
 *
 * @see CustomController
 */
@SuppressWarnings("MethodName")
public class CommandCustomController extends CommandGenericHID {
  private final CustomController m_hid;

  /**
   * Construct an instance of a controller.
   *
   * @param port The port index on the Driver Station that the controller is plugged into.
   */
  public CommandCustomController(int port) {
    super(port);
    m_hid = new CustomController(port);
  }

  /**
   * Get the underlying GenericHID object.
   *
   * @return the wrapped GenericHID object
   */
  @Override
  public CustomController getHID() {
    return m_hid;
  }

  /**
   * Constructs a Trigger instance around the 1 button's digital signal.
   *
   * @return a Trigger instance representing the 1 button's digital signal attached
   *     to the {@link CommandScheduler#getDefaultButtonLoop() default scheduler button loop}.
   * @see #1(EventLoop)
   */
  public Trigger bt1() {
    return bt1(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  /**
   * Constructs a Trigger instance around the 1 button's digital signal.
   *
   * @param loop the event loop instance to attach the event to.
   * @return a Trigger instance representing the 1 button's digital signal attached
   *     to the given loop.
   */
  public Trigger bt1(EventLoop loop) {
    return button(CustomController.Button.k1.value, loop);
  }

  public Trigger bt2() {
    return bt2(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt2(EventLoop loop) {
    return button(CustomController.Button.k2.value, loop);
  }

  public Trigger bt3() {
    return bt3(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt3(EventLoop loop) {
    return button(CustomController.Button.k3.value, loop);
  }

  public Trigger bt4() {
    return bt4(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt4(EventLoop loop) {
    return button(CustomController.Button.k4.value, loop);
  }

  public Trigger bt5() {
    return bt5(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt5(EventLoop loop) {
    return button(CustomController.Button.k5.value, loop);
  }

  public Trigger bt6() {
    return bt6(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt6(EventLoop loop) {
    return button(CustomController.Button.k6.value, loop);
  }

  public Trigger bt7() {
    return bt7(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt7(EventLoop loop) {
    return button(CustomController.Button.k7.value, loop);
  }

  public Trigger bt8() {
    return bt8(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt8(EventLoop loop) {
    return button(CustomController.Button.k8.value, loop);
  }

  public Trigger bt9() {
    return bt9(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt9(EventLoop loop) {
    return button(CustomController.Button.k9.value, loop);
  }

  public Trigger bt10() {
    return bt10(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt10(EventLoop loop) {
    return button(CustomController.Button.k10.value, loop);
  }

  public Trigger bt11() {
    return bt11(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt11(EventLoop loop) {
    return button(CustomController.Button.k11.value, loop);
  }

  public Trigger bt12() {
    return bt12(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt12(EventLoop loop) {
    return button(CustomController.Button.k12.value, loop);
  }

  public Trigger bt16() {
    return bt16(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt16(EventLoop loop) {
    return button(CustomController.Button.k16.value, loop);
  }

  public Trigger bt17() {
    return bt17(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt17(EventLoop loop) {
    return button(CustomController.Button.k17.value, loop);
  }

  public Trigger bt18() {
    return bt18(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt18(EventLoop loop) {
    return button(CustomController.Button.k18.value, loop);
  }

  public Trigger bt19() {
    return bt19(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  public Trigger bt19(EventLoop loop) {
    return button(CustomController.Button.k19.value, loop);
  }
}
